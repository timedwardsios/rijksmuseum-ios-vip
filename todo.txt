Notes:
CurrentValueSubject is pushing a new AppState and the AppState is doing diffing on the view level
I think he used appstate bc it's faster?
We're using @Published instead for now

move systemhandler to enum




What if view forwarded events to interactor, it got split into workers, and then updated the state.

The state is bound to presenter.

Presenter updates the UI.

Look at reducer pattern.






"CancelBag" to keep structs

Fix routing

Copy over loadable

Move Model over to struct, and use removeDuplicates to avoid setting state twice?

Mock data for the entire app is good. Speeds up development and testing.

Use config for everything

Add search

Add caching

Add UserDefaults for settings

Move images to manual loading and caching

Fix routing
Look up router in MVVM
FlowCoordinator?

Write unit tests
Mocking frameworks

Add strict linting rules

Readme - explain over-engineering reasons
