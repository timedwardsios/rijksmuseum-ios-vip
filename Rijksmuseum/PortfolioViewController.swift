//
//  PortfolioViewController.swift
//  Rijksmuseum
//
//  Created by Tim Edwards on 29/07/2018.
//  Copyright (c) 2018 Tim Edwards. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PortfolioDisplayLogic: class{
    func displaySomething(viewModel: Portfolio.Something.ViewModel)
}

class PortfolioViewController: UIViewController{
    var interactor: PortfolioBusinessLogic?
    var router: (PortfolioRoutingLogic & PortfolioDataPassing)?

    // MARK: Object lifecycle
    init() {
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: View lifecycle
    override func viewDidLoad(){
        super.viewDidLoad()
        doSomething()
    }

    // MARK: Do something
    func doSomething(){
        let request = Portfolio.Something.Request()
        interactor?.doSomething(request: request)
    }
}

extension PortfolioViewController: PortfolioDisplayLogic {
    func displaySomething(viewModel: Portfolio.Something.ViewModel){
        // process vm
    }
}
