//
//  PortfolioModels.swift
//  Rijksmuseum
//
//  Created by Tim Edwards on 29/07/2018.
//  Copyright (c) 2018 Tim Edwards. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PortfolioDisplayLogic: class{
    func updateViewModel(viewModel: Portfolio.FetchArt.ViewModel)
}

protocol PortfolioBusinessLogic{
    func fetchArt(request: Portfolio.FetchArt.Request)
}

protocol PortfolioPresentationLogic{
    func didFetchArt(response: Portfolio.FetchArt.Response)
}

protocol PortfolioRoutingLogic{
    var dataStore: PortfolioDataStore { get }
}

protocol PortfolioDataStore{
    var selectedPrimitive:ArtPrimitive?{get}
}

enum Portfolio{
    enum FetchArt{
        struct Request{}
        struct Response{
            let artPrimitives:[ArtPrimitive]
        }
        struct ViewModel{
            struct Listing {
                let imageUrl:URL
            }
            let listings:[Listing]
        }
    }

    static func build()->PortfolioViewController{
        let presenter = PortfolioPresenter()
        let interactor = PortfolioInteractor(presenter: presenter)
        let router = PortfolioRouter(dataStore: interactor)
        let viewController = PortfolioViewController(interactor: interactor,
                                                     router: router)
        presenter.viewController = viewController
        router.viewController = viewController
        return viewController
    }
}
